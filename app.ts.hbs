import { LsotClient } from "./client";

function connect(userId: string, stateId: string) {
  return LsotClient.connect(
    userId,
    stateId,
    (state) => (document.getElementById("state")!.innerHTML = JSON.stringify(state, null, 2))
  );
}

function setMetadata(userName: string, stateId: string) {
  const urlParams = new URLSearchParams();
  urlParams.set("stateId", stateId);
  urlParams.set("userName", userName);
  history.pushState({}, "", window.location.pathname + "?" + urlParams.toString());
}

const name = prompt("Enter username")!;
LsotClient.registerUser(name)
  .then((userId) => {
    const urlParams = new URLSearchParams(window.location.search);
    const stateId = urlParams.get("stateId") || prompt("Enter stateId (or enter if creating new)");
    if (stateId != null && stateId.length > 0) {
      setMetadata(name, stateId);
      return connect(userId, stateId);
    } else {
      return LsotClient.createState(userId).then((stateId) => {
        setMetadata(name, stateId);
        return connect(userId, stateId);
      });
    }
  })
  .then((client) => {
    (window as any).client = client;
    (window as any).sendData = (method: string, ...elmIds: string[]) => {
      const elms = elmIds.map((elmId) => document.getElementById(method + "_" + elmId));
      const values = elms.map((elm) => (elm as any).value);
      console.log(method, values);
    };
  });
