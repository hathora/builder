export interface UserData {
  id: string;
  username: string;
}

{{#each types}}
{{#with (getArgsInfo this)}}
{{#if (eq type "enum")}}
export enum {{@key}} {
  {{#each options}}
  {{label}},
  {{/each}}
}
{{else if (eq type "object")}}
export interface {{@key}} {
  {{#each properties}}
  {{@key}}: {{> renderArg}}
  {{/each}}
}
{{else}}
export type {{@key}} = {{../this}};
{{/if}}
{{/with}}
{{/each}}
{{#each methods}}
export interface {{makeRequestName @key}} {
{{#if this}}
{{#with (getArgsInfo this)}}
  {{#each properties}}
  {{@key}}: {{> renderArg}};
  {{/each}}
{{/with}}
{{/if}}
}
{{/each}}
{{#*inline "renderArg"}}
{{#if alias}}
{{typeString}}
{{~else if (eq type "optional")}}
{{> renderArg item}} | undefined
{{~else if (eq type "array")}}
{{> renderArg items}}[]
{{~else if (eq type "number")}}
number
{{~else if (eq type "string")}}
string
{{~else if (eq type "boolean")}}
boolean
{{~else if (eq type "plugin")}}
{{> renderArg item}}
{{~/if}}
{{~/inline}}