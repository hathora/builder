import { Response } from "../../api/base";
import {
  UserId,
  {{userState}} as UserState,
  {{#each methods}}
  {{makeRequestName @key}},
  {{/each}}
} from "../../api/types";

export interface Context {
  rand(): number;
  randInt(limit?: number): number;
  shuffle<T>(items: T[]): T[];
  time(): number;
}

export interface Methods<T> {
  {{#each methods}}
  {{#if (eq @key ../initialize)}}
  {{../initialize}}(userId: UserId, ctx: Context, request: {{makeRequestName @key}}): T;
  {{else}}
  {{@key}}(state: T, userId: UserId, ctx: Context, request: {{makeRequestName @key}}): Response;
  {{/if}}
  {{/each}}
  getUserState(state: T, userId: UserId): UserState;
  {{#if tick}}
  onTick(state: T, ctx: Context, timeDelta: number): void;
  {{/if}}
}
