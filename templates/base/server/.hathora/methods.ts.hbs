import { Chance } from "chance";
import { Response } from "../../api/base";
import {
  UserId,
  {{userState}} as UserState,
  IInitializeRequest,
  {{#each methods}}
  {{makeRequestName @key}},
  {{/each}}
	HathoraEventTypes,
	HathoraEventPayloads,
} from "../../api/types";

export interface Context {
  chance: ReturnType<typeof Chance>;
  time: number;
  sendEvent: <EventType extends HathoraEventTypes>(
		event: EventType,
		data: HathoraEventPayloads[EventType],
		to: UserId
		) => void;
  broadcastEvent: <EventType extends HathoraEventTypes>(
		event: EventType,
		data: HathoraEventPayloads[EventType]
		) => void;
}
export interface Methods<T> {
  initialize(ctx: Context, request: IInitializeRequest): T;
  {{#each methods}}
  {{@key}}(state: T, userId: UserId, ctx: Context, request: {{makeRequestName @key}}): Response;
  {{/each}}
  getUserState(state: T, userId: UserId): UserState;
  {{#if tick}}
  onTick(state: T, ctx: Context, timeDelta: number): void;
  {{/if}}
}
