import {
  UserData,
  Result,
  {{userState}} as UserState,
  {{#each methods}}
  {{makeRequestName @key}},
  {{/each}}
} from "./types";

export interface Context {
  rand(): number;
  randInt(limit?: number): number;
  time(): number;
}

export interface Methods<T> {
  {{#each methods}}
  {{#if (eq @key ../initialize)}}
  {{../initialize}}(user: UserData, ctx: Context, request: {{makeRequestName @key}}): T;
  {{else}}
  {{@key}}(state: T, user: UserData, ctx: Context, request: {{makeRequestName @key}}): Result;
  {{/if}}
  {{/each}}
  getUserState(state: T, user: UserData): UserState;
  {{#if tick}}
  onTick(state: T, ctx: Context): void;
  {{/if}}
}
