import { Methods } from "./.rtag/methods";
import {
  {{userData}},
  {{userState}},
  {{#each methods}}
  {{makeRequestName @key}},
  {{/each}}
} from "./.rtag/types";

interface InternalState {}

export class Impl implements Methods<InternalState> {
  {{initialize}}(userData: {{userData}}, request: {{makeRequestName initialize}}): InternalState {
    return {};
  }
  {{#each methods}}
  {{#if (ne @key ../initialize)}}
  {{@key}}(state: InternalState, userData: {{../userData}}, request: {{makeRequestName @key}}): string | void {
    throw new Error("Method not implemented.");
  }
  {{/if}}
  {{/each}}
  getUserState(state: InternalState, userData: {{userData}}): {{userState}} {
    throw new Error("Method not implemented.");
  }
  {{#if tick}}
  onTick(state: InternalState): void {}
  {{/if}}
}
