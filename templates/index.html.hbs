<html>
  <head>
    <link rel="stylesheet" type="text/css" href="./styles.css" />
    <link href="./node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css" rel="stylesheet" />
  </head>

  <body>
    <div id="app">
      <router-view></router-view>
    </div>
    <script type="text/x-template" id="state-template">
      <div class="container">
        <div class="forms-container">
          {{#each methods}}
          {{#if (ne @key ../initialize)}}
          {{#if this}}
          <method-form method="{{@key}}" v-slot="{ arg, value }">
            {{> renderForm (getArgsInfo this)}}
          </method-form>
          {{else}}
          <method-form method="{{@key}}"></method-form>
          {{/if}}
          {{/if}}
          {{/each}}
        </div>
        <div class="json-state">
          {{#with types}}
          {{> renderState (getArgsInfo PlayerState)}}
          {{/with}}
        </div>
      </div>
    </script>
    <script src="./app.ts"></script>
  </body>
</html>

{{#*inline "renderForm"}}
{{#if (eq type "object")}}
<object-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}} v-slot="{ value }">
  {{#each properties}}
  <label class="label">
    {{@key}}
    {{> renderForm arg=@key}}
  </label>
  {{/each}}
</object-input>
{{else if (eq type "array")}}
<array-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}} v-slot="{ arg, value }">
  {{#with items}}
  {{> renderForm}}
  {{/with}}
</array-input>
{{else if (eq type "enum")}}
<enum-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}} :options='{{{stringify options}}}'></enum-input>
{{else if (eq type "string")}}
<string-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}}></string-input>
{{else if (eq type "number")}}
<number-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}}></number-input>
{{else if (eq type "boolean")}}
<boolean-input {{#if arg}}arg="{{arg}}" :value="value.{{arg}}"{{else}}:arg="arg" :value="value"{{/if}}></boolean-input>
{{/if}}
{{/inline}}

{{#*inline "renderState"}}
{{#if (eq type "object")}}
{
<object-display class="object-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}} v-slot="{ value }">
  {{#each properties}}
  <div class="kv-display">
    <span class="key-display">{{@key}}</span>:
    {{> renderState arg=@key}}
  </div>
  {{/each}}
</object-display>
},
{{else if (eq type "array")}}
[
<array-display class="array-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}} v-slot="{ value }">
  {{#with items}}
  {{> renderState}}
  {{/with}}
</array-display>
],
{{else if (eq type "enum")}}
<enum-display class="enum-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}} :options='{{{stringify options}}}'></enum-display>,
{{else if (eq type "string")}}
<string-display class="string-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}}></string-display>,
{{else if (eq type "number")}}
<number-display class="number-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}}></number-display>,
{{else if (eq type "boolean")}}
<boolean-display class="boolean-display" {{#if arg}}:value="value.{{arg}}"{{else}}:value="value"{{/if}}></boolean-display>,
{{/if}}
{{/inline}}
